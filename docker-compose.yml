version: '3.3'
services:
  app:
    container_name: 'app'
    build: .
    # command: gunicorn -w 2 -k uvicorn.workers.UvicornWorker fastapi_app.main:app --bind 0.0.0.0:40000 --timeout 1200  --forwarded-allow-ips='*'
    command: uvicorn fastapi_app.main:app --host 0.0.0.0 --reload --port 40000 --forwarded-allow-ips='*' --proxy-headers
    restart: always
    environment:
      - PYTHONUNBUFFERED=1
      - PW=/run/secrets/pw
      - MAX_DAYS=14
      - MAX_CONSUMER=2000
      - MAX_CONSUMER_ANONYMOUS=150
      - MAX_LAT_LON_DIST=0.15
      - DOCKERIZED=1
      - MONGO_USER=ackee_user
      - MONGO_PORT=27017
    ports:
      - '40000:40000'
    links:
      - mysql
    secrets:
      - pw
    depends_on:
      - redis
      - mysql
      - mongo
  mysql:
    container_name: mysql
    image: mysql
    restart: always
    environment:
      MYSQL_DATABASE: peoplesun_user_db
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/pw
    ports:
      - '40001:3306'
    secrets:
      - pw
    volumes:
      - ./db_data/user_db:/var/lib/mysql
  redis:
    image: redis
    container_name: 'redis'
    restart: always
    ports:
    - '6379:6379'
  worker:
    container_name: 'celery'
    build: .
    restart: always
    ports:
      - '5555:5555'
    command: celery -A celery_worker.worker worker --loglevel=DEBUG --pool prefork # --concurrency 4
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - FLOWER_PORT=5555
      - PW=/run/secrets/pw
    depends_on:
      - app
      - redis
      - mysql
    secrets:
      - pw
    deploy:
      resources:
        limits:
          memory: 40g
  flower:
    container_name: 'flower'
    build: .
    restart: always
    command: celery -A celery_worker.worker flower --port=5555
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
      - FLOWER_PORT=5555
      - PW=/run/secrets/pw
    ports:
      - '40002:5555'
    depends_on:
      - redis
      - worker
      - app
    secrets:
      - pw
  adminer:
    container_name: 'adminer'
    image: adminer
    restart: always
    ports:
      - '40003:8080'
    depends_on:
      - mysql
    environment:
      - ADMINER_DEFAULT_SERVER=mysql
      - ADMINER_DEFAULT_USERNAME=root
      - ADMINER_DEFAULT_PASSWORD_FILE=/run/secrets/pw
    secrets:
      - pw
  ackee:
    container_name: 'ackee'
    image: electerious/ackee:3.4.2
    restart: always
    ports:
      - "40004:3000"
    environment:
      - ACKEE_MONGODB=placeholder # ackee.config.js is copied into the container and overrides the env-variables
      - ACKEE_USERNAME=ackee_user
      - ACKEE_PASSWORD=placeholder # ackee.config.js is copied into the container and overrides the env-variables
      - ACKEE_PASSWORD_FILE=/run/secrets/pw
      - MONGO_CONTAINER_NAME=mongo
      - DB_PORT=27017
    secrets:
      - pw
    volumes:
          - ./ackee_config.js:/srv/app/src/utils/config.js
    depends_on:
      - mongo
      - app
  mongo:
    container_name: 'mongo'
    image: mongo:latest
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=ackee_user
      - MONGO_INITDB_ROOT_PASSWORD_FILE=/run/secrets/pw
    ports:
      - "27017:27017"
    volumes:
      - ./db_data/mongo:/data/db
    secrets:
      - pw
secrets:
  pw:
    file: ./secrets/secret.txt
